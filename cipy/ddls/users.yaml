---
schema:
    table_name: "users"
    columns:
        -
            column_name: "user_id"
            data_type: "SERIAL"
            column_constraints: "PRIMARY KEY"
        -
            column_name: "created_ts"
            data_type: "TIMESTAMP(0) WITHOUT TIME ZONE"
            column_constraints: "DEFAULT (CURRENT_TIMESTAMP(0) AT TIME ZONE 'UTC')"
        -
            column_name: "name"
            data_type: "VARCHAR(200)"
            column_constraints: "NOT NULL"
        -
            column_name: "email"
            data_type: "VARCHAR(200)"
            column_constraints: "UNIQUE NOT NULL"
        -
            column_name: "password"
            data_type: "VARCHAR"
            column_constraints: "NOT NULL"
        -
            column_name: "review_ids"
            data_type: "INTEGER ARRAY"
        -
            column_name: "owned_review_ids"
            data_type: "INTEGER ARRAY"
templates:
    create_user: >
        INSERT INTO users (name, email, password, review_ids, owned_review_ids)
        VALUES (%(name)s, %(email)s, crypt(%(password)s, gen_salt('bf')), %(review_ids)s, %(owned_review_ids)s)
        RETURNING user_id
    delete_user: >
        DELETE from users
        WHERE user_id = %(user_id)s
    login_user: >
        SELECT user_id, name, email, review_ids, owned_review_ids
        FROM users
        WHERE
            email = %(email)s
            AND crypt(%(password)s, password) = password
    add_created_review: >
        UPDATE users
        SET
            owned_review_ids = uniq(sort(array_append(owned_review_ids, %(review_id)s))),
            review_ids = uniq(sort(array_append(review_ids, %(review_id)s)))
        WHERE user_id = %(user_id)s
        RETURNING user_id
    remove_deleted_review: >
        UPDATE users
        SET
            owned_review_ids = owned_review_ids - %(review_id)s,
            review_ids = review_ids - %(review_id)s
        WHERE %(review_id)s = ANY(review_ids)
        RETURNING user_id
    add_review: >
        UPDATE users
        SET review_ids = uniq(sort(array_append(review_ids, %(review_id)s)))
        WHERE user_id = %(user_id)s
    remove_review: >
        UPDATE users
        SET review_ids = review_ids - %(review_id)s
        WHERE user_id = %(user_id)s
    check_email_exists: >
        SELECT true FROM users WHERE email = %(email)s
...
