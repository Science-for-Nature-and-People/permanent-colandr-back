---
schema:
    table_name: "reviews"
    columns:
        -
            column_name: "review_id"
            data_type: "SERIAL"
            column_constraints: "PRIMARY KEY"
        -
            column_name: "created_ts"
            data_type: "TIMESTAMP(0) WITHOUT TIME ZONE"
            column_constraints: "NOT NULL"
        -
            column_name: "owner_user_id"
            data_type: "INTEGER"
            column_constraints: "NOT NULL"
        -
            column_name: "user_ids"
            data_type: "INTEGER ARRAY"
            column_constraints: "NOT NULL"
        -
            column_name: "name"
            data_type: "VARCHAR(500)"
            column_constraints: "NOT NULL"
        -
            column_name: "description"
            data_type: "TEXT"
templates:
    create_review: >
        INSERT INTO reviews (created_ts, owner_user_id, user_ids, name, description)
        VALUES (%(created_ts)s, %(owner_user_id)s, %(user_ids)s, %(name)s, %(description)s)
        RETURNING review_id
    delete_review: >
        DELETE from reviews
        WHERE
            review_id = %(review_id)s
            AND owner_user_id = %(owner_user_id)s
    add_invited_user: >
        UPDATE reviews
        SET user_ids = uniq(sort(array_append(user_ids, %(user_id)s))
        WHERE
            review_id = %(review_id)s
            AND owner_user_id = %(owner_user_id)s
    remove_invited_user: >
        UPDATE reviews
        SET user_ids = user_ids - %(user_id)s
        WHERE
            review_id = %(review_id)s
            AND owner_user_id = %(owner_user_id)s
    assign_new_owner: >
        TODO
    remove_deleted_user: >
        UPDATE reviews
        SET user_ids = user_ids - %(user_id)s
        WHERE %(user_id)s = ANY(user_ids)
        RETURNING review_id
    get_owner_user_id: >
        SELECT owner_user_id FROM reviews
        WHERE review_id = %(review_id)s
...
